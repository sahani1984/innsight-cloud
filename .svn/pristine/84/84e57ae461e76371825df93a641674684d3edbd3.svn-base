<section class="w-100 mt-2 collection_manager">
    <div class="container-fluid">
      <div class="whitebgbox">
        <!-- MAIN HEADING BAR SECTION -->
        <div class="profile_manager">
          <div class="kt-portlet">
            <div class="kt-portlet__head">
              <div class="kt-portlet__head-label">
                <h3 class="kt-portlet__head-title">Job Detail</h3>
              </div>              
            </div>
          </div>
        </div>
  
        <div class="kt-container pb-4">
          <div class="searchform">
       <form>
         <div class="row">         
           <div class="col minw_150">
             <mat-form-field class="w-100">
               <mat-label>From Date</mat-label>
               <input matInput #start_date="ngModel" [(ngModel)]="startDate" (dateChange)="bindData()"
                 [ngxMatDatetimePicker]="picker1" placeholder="From Date" name="start_date">
               <mat-datepicker-toggle matSuffix [for]="picker1"></mat-datepicker-toggle>
               <ngx-mat-datetime-picker #picker1></ngx-mat-datetime-picker>
             </mat-form-field>
           </div>           
          
           <div class="col minw_150">
             <mat-form-field class="w-100">
               <mat-label>To Date</mat-label>
               <input matInput #end_date="ngModel" [(ngModel)]="endDate" (dateChange)="bindData()"
                 [ngxMatDatetimePicker]="picker2" name="end_date" placeholder="To Date">
               <mat-datepicker-toggle matSuffix [for]="picker2"></mat-datepicker-toggle>
               <ngx-mat-datetime-picker #picker2></ngx-mat-datetime-picker>
             </mat-form-field>
           </div>

           <div class="col">
            <mat-form-field class="w-100">
              <mat-label>Date Filter Type</mat-label>
              <mat-select [(value)]="dateFilterType" (selectionChange)="bindData()">  
                <mat-option value="createdAt">Creation Date</mat-option>
                <mat-option value="startCrawlDate">Crawl Date</mat-option>                  
              </mat-select>
            </mat-form-field>
          </div>

           <div class="col">
            <mat-form-field class="w-100 searchfield">
              <mat-label>Search Keyword</mat-label>
              <input [(ngModel)]="search" name="KeywordSearch" type="text" (keyup.enter)="bindData()" matInput />
              <mat-icon title="Keyword ID" (click)="bindData()" matSuffix>search</mat-icon>
            </mat-form-field>
          </div> 
          <div class="col">
            <mat-form-field class="w-100">
              <mat-label>Search Type</mat-label>
              <mat-select [(value)]="searchType" (selectionChange)="bindData()">                   
                <mat-option value="collection">Collection</mat-option>
                <mat-option value="entity">Entity</mat-option>                  
              </mat-select>
            </mat-form-field>
          </div>
          
          <div class="col">
            <mat-form-field  class="w-100">
              <mat-label>Client</mat-label>
            <mat-select [(value)]="ClientID" (selectionChange)="bindData()">                      
                <mat-option value="">All</mat-option>                    
                <mat-option *ngFor="let c of clientList" [value]="c.client_id">{{c.client_name}}</mat-option>                    
              </mat-select>
            </mat-form-field>
          </div>
           <div class="col">
            <mat-form-field  class="w-100">
              <mat-label>Source</mat-label>
              <mat-select [(value)]="source" (selectionChange)="bindData()">
                <mat-option value="">All</mat-option>
                <mat-option *ngFor="let s of sourceList" [value]="s.source">{{s.name | titlecase}}</mat-option>
              </mat-select>
            </mat-form-field>
          </div>
          <div class="col">
            <mat-form-field>
              <mat-label>Collection Type</mat-label>
              <mat-select [(value)]="collectionType" (selectionChange)="bindData()">
                <mat-option value="">All</mat-option>
                <mat-option value="keyword">Track Event</mat-option>
                <mat-option value="profile">Track Profile</mat-option>
                <mat-option value="location"> Track Location</mat-option>                     
                <mat-option value="federated">Federated Search</mat-option>                     
              </mat-select>
            </mat-form-field>
          </div>
          <div class="col">
            <mat-form-field class="w-100">
              <mat-label>Crawling Status</mat-label>
              <mat-select [(value)]="crawlingStatus" (selectionChange)="bindData()">
                <mat-option value="">All</mat-option>
                <mat-option value="processing">Processing</mat-option>
                <mat-option value="completed">Completed</mat-option>                
                 <mat-option value="error">Error</mat-option>
              </mat-select>
            </mat-form-field>
          </div> 
          <div class="col">
            <mat-form-field class="w-100">
                <mat-label>Machine IP</mat-label>
                <mat-select [(value)]="machineIP" (selectionChange)="bindData()">                   
                  <mat-option value="">All</mat-option>
                  <mat-option *ngFor="let ip of IPlist" [value]="ip">{{ip}}</mat-option>                 
                </mat-select>
              </mat-form-field>
            </div>  
            <div class="col">
              <mat-form-field class="w-100">
                  <mat-label>Read status</mat-label>
                  <mat-select [(value)]="readStatus" (selectionChange)="bindData()">                   
                    <mat-option value="">All</mat-option>
                    <mat-option value="read">Read</mat-option>                 
                    <mat-option value="unread">Unread</mat-option>                 
                  </mat-select>
                </mat-form-field>
              </div>          
         </div>
       </form>
     </div>


     <mat-accordion>
      <mat-expansion-panel [expanded]="true" (opened)="panelOpenState = true" (closed)="panelOpenState = false">
        <mat-expansion-panel-header>
          <mat-panel-title>
           {{panelOpenState?'':'Status count chart'}}
          </mat-panel-title>         
        </mat-expansion-panel-header>
        <div class="charts">
          <div class="row">
              <div class="col-md-4">
                <highcharts-chart *ngIf="jobPieChartDataArr.length"  [Highcharts]="Highcharts" [options]="jobsPieChartOptions">
                </highcharts-chart>
              </div>
              <div class="col-md-8">
                <highcharts-chart *ngIf="jobsColumnsChartArr.length"  [Highcharts]="Highcharts" [options]="jobsColumnChartOptions">
                </highcharts-chart>
              </div>
            </div>          
        </div>      
      </mat-expansion-panel>
    </mat-accordion>

    
        
    <div class="table-responsive mt-3">
            <div [hidden]="!jobDetailsList.length" class="mat_table customScrollbar">                      
               <table mat-table [dataSource]="jobDetailsList" #recordTbl class="mat-elevation-z8 w-100">
                <ng-container matColumnDef="Sr.No" sticky>
                  <th mat-header-cell *matHeaderCellDef width="80" sticky>Sr.No</th>
                  <td mat-cell *matCellDef="let element; let i=index">{{getRecordNumber(i)}}</td>
                </ng-container>

                <ng-container matColumnDef="Collection Name">
                  <th mat-header-cell *matHeaderCellDef> Collection Name</th>
                  <td mat-cell *matCellDef="let element">{{element.collectionName}}</td>
                </ng-container>

                <ng-container matColumnDef="Collection Type">
                  <th mat-header-cell *matHeaderCellDef> Collection Type</th>
                  <td mat-cell *matCellDef="let element">{{element.collectionType}}</td>
                </ng-container>

                <ng-container matColumnDef="Name">
                  <th mat-header-cell *matHeaderCellDef>Name</th>
                  <td mat-cell *matCellDef="let element">{{element.name}}</td>
                </ng-container>

                <ng-container matColumnDef="Crawling Status">
                  <th mat-header-cell *matHeaderCellDef>Crawling Status</th>
                  <td mat-cell *matCellDef="let element">{{element.crawlingStatus}}</td>
                </ng-container>

                 <ng-container matColumnDef="Source">
                  <th mat-header-cell *matHeaderCellDef>Source</th>
                  <td mat-cell *matCellDef="let element">{{element.source}}</td>
                </ng-container>

                 <ng-container matColumnDef="Client">
                  <th mat-header-cell *matHeaderCellDef>Client</th>
                  <td mat-cell *matCellDef="let element">{{element.clientId}}</td>
                </ng-container>

                <ng-container matColumnDef="Start Crawl Date">
                  <th mat-header-cell *matHeaderCellDef> Start Crawl Date</th>
                  <td mat-cell *matCellDef="let element">{{element.startCrawlDate | date: 'dd/MM/yyyy hh:mm:ss a' }}</td>
                </ng-container>

                 <ng-container matColumnDef="Last Crawl Date">
                  <th mat-header-cell *matHeaderCellDef>Last Crawl Date</th>
                  <td mat-cell *matCellDef="let element">{{element.lastCrawlDate | date: 'dd/MM/yyyy hh:mm:ss a' }}</td>
                </ng-container>

                <ng-container matColumnDef="Message">
                  <th mat-header-cell *matHeaderCellDef>Message</th>
                  <td mat-cell *matCellDef="let element">{{element.message}}</td>
                </ng-container>

               <ng-container matColumnDef="Collection ID">
                  <th mat-header-cell *matHeaderCellDef>Collection ID</th>
                  <td mat-cell *matCellDef="let element">{{element.collectionId}}</td>
                </ng-container>

               <ng-container matColumnDef="keyword ID">
                  <th mat-header-cell *matHeaderCellDef> keyword ID</th>
                  <td mat-cell *matCellDef="let element">{{element.keywordId}}</td>
                </ng-container>


               <ng-container matColumnDef="Created At">
                  <th mat-header-cell *matHeaderCellDef>Created At</th>
                  <td mat-cell *matCellDef="let element">{{element.createdAt}}</td>
                </ng-container>

                <ng-container matColumnDef="Created By">
                  <th mat-header-cell *matHeaderCellDef>Created By</th>
                  <td mat-cell *matCellDef="let element">{{element.createdBy}}</td>
                </ng-container>

                <ng-container matColumnDef="Job ID">
                  <th mat-header-cell *matHeaderCellDef>Job ID</th>
                  <td mat-cell *matCellDef="let element">{{element.jobId}}</td>
                </ng-container>

                <ng-container matColumnDef="Log Inserted Date">
                  <th mat-header-cell *matHeaderCellDef>Log Inserted DateD</th>
                  <td mat-cell *matCellDef="let element">{{element.logInsertedDate  | date: 'dd/MM/yyyy hh:mm:ss a' }}</td>
                </ng-container>


                <ng-container matColumnDef="Machine IP">
                  <th mat-header-cell *matHeaderCellDef>Machine IP</th>
                  <td mat-cell *matCellDef="let element">{{element.machineIp}}</td>
                </ng-container>

              
               <ng-container matColumnDef="Action" stickyEnd>
                  <th mat-header-cell *matHeaderCellDef>Action</th>
                  <td mat-cell *matCellDef="let element">
                    <button (click)="viewJob(element)"  title="View Logs" type="button" 
                    class="btn btn-sm btn-clean btn-bold btn-upper">View Logs</button>
                    <span *ngIf="element.crawlingStatus == 'error'" class="success_color_togglslide ml-1 d-inline-block">
                      <mat-slide-toggle (change)="updateReadStatus($event, element)"  [checked]="element.readStatus == 'read'">
                        {{element.readStatus | titlecase}}
                      </mat-slide-toggle>   
                    </span>
                  </td>
                </ng-container>              

              <tr mat-header-row *matHeaderRowDef="displayedColumns; sticky: true"></tr>
                <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>
              </table>           
          </div>

          <mat-paginator [length]="totalNumberOfRecord" [pageSize]="size" [pageIndex]="page" [hidePageSize]="true"
            (page)="paginate($event)">
          </mat-paginator>

          </div>
         
        </div>
      </div>
    </div>
  </section>
  
  